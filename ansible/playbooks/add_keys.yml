
- hosts:
    - validator_node

  tasks:
    - name: add aura author key to keystore
      uri:
        url: http://localhost:9933
        method: "POST"
        body_format: json
        body: |
            {
                "jsonrpc":"2.0",
                "id":1,
                "method":"author_insertKey",
                "params": [
                    "aura",
                    "{{ mnemonic }}",
                    "{{ aura_public_key }}"
                ]
            }
      register: aura_insertion
      until: aura_insertion.status == 200
      retries: 10
      delay: 5

    - name: show aura response
      debug:
        var: aura_insertion

    - name: add dkg key to keystore
      uri:
        url: http://localhost:9933
        method: "POST"
        body_format: json
        body: |
            {
                "jsonrpc":"2.0",
                "id":1,
                "method":"author_insertKey",
                "params": [
                    "wdkg",
                    "{{ mnemonic }}",
                    "{{ wdkg_public_key }}"
                ]
            }
      register: insertion
      until: insertion.status == 200
      retries: 10
      delay: 5

    - name: show response
      debug:
        var: insertion
        
    - name: add acco author key to keystore
      uri:
        url: http://localhost:9933
        method: "POST"
        body_format: json
        body: |
            {
                "jsonrpc":"2.0",
                "id":1,
                "method":"author_insertKey",
                "params": [
                    "acco",
                    "{{ mnemonic }}",
                    "{{ acco_public_key }}"
                ]
            }
      register: insertion
      until: insertion.status == 200
      retries: 10
      delay: 5

    - name: show response
      debug:
        var: insertion
  
    - name: add gran key to keystore
      uri:
        url: http://localhost:9933
        method: "POST"
        body_format: json
        body: |
            {
                "jsonrpc":"2.0",
                "id":1,
                "method":"author_insertKey",
                "params": [
                    "gran",
                    "{{ mnemonic }}",
                    "{{ gran_public_key }}"
                ]
            }
      register: insertion
      until: insertion.status == 200
      retries: 10
      delay: 5

    - name: show response
      debug:
        var: insertion

    - name: add Rand key to keystore
      uri:
        url: http://localhost:9933
        method: "POST"
        body_format: json
        body: |
            {
                "jsonrpc":"2.0",
                "id":1,
                "method":"author_insertKey",
                "params": [
                    "rand",
                    "{{ mnemonic }}",
                    "{{ rand_public_key }}"
                ]
            }
      register: insertion
      until: insertion.status == 200
      retries: 10
      delay: 5

    - name: show response
      debug:
        var: insertion

    - name: add Nimbus key to keystore
      uri:
        url: http://localhost:9933
        method: "POST"
        body_format: json
        body: |
            {
                "jsonrpc":"2.0",
                "id":1,
                "method":"author_insertKey",
                "params": [
                    "nmbs",
                    "{{ mnemonic }}",
                    "{{ nmbs_public_key }}"
                ]
            }
      register: insertion
      until: insertion.status == 200
      retries: 10
      delay: 5

    - name: show response
      debug:
        var: insertion

    - name: add imon key to keystore
      uri:
        url: http://localhost:9933
        method: "POST"
        body_format: json
        body: |
            {
                "jsonrpc":"2.0",
                "id":1,
                "method":"author_insertKey",
                "params": [
                    "imon",
                    "{{ mnemonic }}",
                    "{{ imon_public_key }}"
                ]
            }
      register: insertion
      until: insertion.status == 200
      retries: 10
      delay: 5

    - name: show response
      debug:
        var: insertion